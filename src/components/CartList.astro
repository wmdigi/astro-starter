---
import { getGroupedProducts } from "@lib/utils";
import Input from "./Input.astro";
import Link from "./Link.astro";

const locals = Astro.locals;
const products = getGroupedProducts(locals.cart.products);

const { preview = false } = Astro.props;
---

<script>
	import { $ } from "@wmdigi/dom";
	import { cart } from "@lib/store";
	import { actions } from "astro:actions";
	import { getGroupedProducts } from "@lib/utils";

	$("#cart-products-summary").addClass("server-loaded");

	// Increase product count
	$("#cart-product-count-increase").on("click", async ({ target }) => {
		const { data, error } = await actions.cart.addToCart({ product: target.dataset.slug });

		if (data?.success) {
			const groupedProducts = getGroupedProducts(data.data.cart.products);
			cart.set({ ...cart.get(), total: data.data.cart.products.length, products: groupedProducts });
			const product = groupedProducts.find((p) => p.slug === target.dataset.slug);
			$(`#cart-product-count-input[data-slug=${target.dataset.slug}]`).first.value = product?.count;
		}
	});

	// Increase product count
	$("#cart-product-count-decrease").on("click", async ({ target }) => {
		const { data, error } = await actions.cart.removeFromCart({ product: target.dataset.slug });

		if (data?.success) {
			const groupedProducts = getGroupedProducts(data.data.cart.products);
			const product = groupedProducts.find((p) => p.slug === target.dataset.slug);
			cart.set({ ...cart.get(), total: data.data.cart.products.length, products: groupedProducts });
			$(`#cart-product-count-input[data-slug=${target.dataset.slug}]`).first.value = product?.count || 0;

			if (!product) {
				$(`#product-${target.dataset.slug}`).addClass("hidden");
			}
		}
	});

	// Change product count mauanlly
	// $("#cart-product-count-input").on("click", async ({ target }) => {
	// 	const { data, error } = await actions.cart.removeFromCart({ product: target.dataset.slug });

	// 	if (data?.success) {
	// 		const groupedProducts = getGroupedProducts(data.data.cart);
	// 		const product = groupedProducts.find((p) => p.slug === target.dataset.slug);
	// 		$(`#cart-product-count-input[data-slug=${target.dataset.slug}]`).first.value = product?.count || 0;
	// 	}
	// });

	cart.subscribe((cart) => {
		if (cart.total === 0) {
			$("#cart-products-summary").addClass("empty");
			return
		} else {
			$("#cart-products-summary").removeClass("empty");
		}
		
		// Total price of cart
		const totalPrice = cart.products.reduce((acc, { price, count }) => acc + Number(price) * Number(count), 0).toFixed(2);
		$(`#product-summary`).first.children[2].innerHTML = `$${totalPrice}`;
	});
</script>

<div id="cart-products-summary" class="group/summary w-full h-full flex flex-col items-start justify-start gap-8 overflow-hidden opacity-0 [.server-loaded&]:opacity-100 [.server-loaded&]:motion-preset-focus motion-delay-150">
	<div class="w-full h-full flex flex-col items-start justify-start gap-8 group-[.empty]/summary:hidden">
		{products.map(({ title, price, count, slug }) => (
		  <div id={`product-${slug}`} class:list={["w-full grid place-items-start items-center gap-8", preview ? "grid-cols-2" : "grid-cols-4"]}>
			<h5 class="font-light">{title}</h5>
			{!preview && (
				<div id="cart-product-count" class="flex h-14 flex-row items-center p-1 justify-center border border-black dark:border-white rounded-full overflow-hidden">
					<button id="cart-product-count-decrease" data-slug={slug} class="px-4 aspect-square h-full bg-transparent hover:bg-[#131313] dark:hover:bg-white text-black hover:text-white dark:hover:text-black relative overflow-hidden text-2xl rounded-full before:-z-[1] before:absolute before:bg-gradient before:inset-0 transition-default">-</button>
					<Input id="cart-product-count-input" data-slug={slug} type="number" value={count} class="!w-[4rem] h-full rounded-none !border-none !text-black dark:!text-white !text-center !bg-transparent" />
					<button id="cart-product-count-increase" data-slug={slug} class="px-4 aspect-square h-full bg-transparent hover:bg-[#131313] dark:hover:bg-white text-black hover:text-white dark:hover:text-black relative overflow-hidden text-2xl rounded-full before:-z-[1] before:absolute before:bg-gradient before:inset-0 transition-default">+</button>
				</div>
			)}
			<h5 class="justify-self-end">${price}</h5>
		  </div>
		))}
		<div id="product-summary" class:list={["w-full grid place-items-start items-center gap-8 pt-16 border-t border-black/20 dark:border-white/20", preview ? "grid-cols-3" : "grid-cols-4"]}>
			<h5>Summary</h5>
			<div></div>
			<h5 id="product-summary-price" class="justify-self-end">$0</h5>
			{!preview && (
				<Link href="/checkout" class="justify-self-end">Checkout</Link>
			)}
		 </div>
	</div>
	
	<div class="w-full h-full py-16 items-center justify-center hidden group-[.empty]/summary:flex">
	  <h5>Cart is empty</h5>
	</div>
</div>